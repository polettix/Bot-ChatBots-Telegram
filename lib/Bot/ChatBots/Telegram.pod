=pod

=encoding utf8

=head1 NAME

Bot::ChatBots::Telegram - Telegram adapter for Bot::ChatBots

=head1 VERSION

This document describes Bot::ChatBots::Telegram version {{[ version ]}}.

=head1 SYNOPSIS

   # A minimal Telegram Bot using WebHooks
   use Log::Any qw< $log >;
   use Log::Any::Adapter;
   use Mojolicious::Lite;
   Log::Any::Adapter->set('Stderr');
   plugin 'Bot::ChatBots::Telegram' => sources => [
      [
         'WebHook',
         processor  => \&processor,
         register   => 1,
         token      => $ENV{TOKEN},
         unregister => 1,
         url        => 'https://example.com:8443/mybot',
      ],
      # more can follow here...
   ];
   app->start;
   sub processor {
      my $record = shift;
      # do whatever you want with $record, e.g. set a quick response
      $record->{response} = 'your thoughs are important for us!';
      return $record;
   }

   # You can also add Bot::ChatBots::Telegram::LongPoll sources if you want

=head1 DESCRIPTION

This module allows you to to define L<Bot::ChatBots> for
L<Telegram Messenger|https://telegram.org/>.


=head1 METHODS

=head2 B<< add_source >>

   $obj->add_source($module, %args); # OR
   $obj->add_source($module, \%args);

Add a new source.

The first argument C<$module> is used (via L<Bot::ChatBots::Utils/load_module>)
to load a class and call its C<new> method with the provided C<%args>. In the
invocation, the pair C<app> and what is available in L</app> is also passed at
the end of the expansion of C<%args> (overriding any previous key C<app>). The
result of this instantiation is then appended to the L</sources>.

=head2 B<< app >>

   my $app = $obj->app;
   $self->app($new_app_object);

Accessor for the application object.

=head2 B<< register >>

   $obj->register($app, $conf);

L<Mojolicious::Plugin> method for registering the plugin.

The registration process adds helper C<chatbots.telegram>, that can be accessed
from the application like this:

   my $obj = app->chatbots->telegram;

This will allow you to call the other methods explained in this documentation.

Argument C<$conf> is a hash reference supporting the following keys:

=over

=item C<logger>

either a logger object (supporting L<Log::Any>'s interface, please) or the string
C<auto>, which automatically loads L<Log::Any::Adapter::MojoLog>.

=item C<sources>

an array reference containing definitions of sources, each represented as another
array reference that is expanded to the arguments list for L</add_source>.

=back

=head2 B<< sources >>

   my $aref = $obj->sources;
   $obj->sources($array_ref);

Accessor for defined sources, stored in an array reference.

=head1 BUGS AND LIMITATIONS

Report bugs either through RT or GitHub (patches welcome).

=head1 SEE ALSO

L<Bot::ChatBots>, L<Bot::ChatBots::Telegram::WebHook>,
L<Bot::ChatBots::Telegram::LongPoll>, L<WWW::Telegram::BotAPI>.

=head1 AUTHOR

Flavio Poletti <polettix@cpan.org>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2016 by Flavio Poletti <polettix@cpan.org>

This module is free software. You can redistribute it and/or modify it
under the terms of the Artistic License 2.0.

This program is distributed in the hope that it will be useful, but
without any warranty; without even the implied warranty of
merchantability or fitness for a particular purpose.

=cut
